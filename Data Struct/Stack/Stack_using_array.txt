class Stack {
    static final int Max=1000;
    int top;
    int a[]=new int[Max];
    boolean isEmpty(){
        return (top<0);
    }
    Stack(){
        top=-1;

    }
    boolean push(int x){
        if (top>=(Max-1)){
            System.out.println("Stack Overflow");
            return false;
        }
        else{
            a[++top]=x;
            System.out.println(x+" pushed");
            return true;
        }
    }
    int pop(){
        if (top < 0) {
            System.out.println("Stack Underflow");
            return 0;
        }
        else {
            int x = a[top--];
            return x;
        }
    }
    int peek(){
        if (top<0){
            System.out.println("Stack Underflow");
            return 0;
        }
        else{
            int x=a[top];
            return x;

        }
    }
    void print(){
        while(top!=-1){
            System.out.print(a[top] +" ");
            top--;
        }
    }
    public static void main (String[] args) {
        Stack s=new Stack();
        s.push(10);
        s.push(2);
        s.push(3);
        s.push(5);
        System.out.println(s.pop() + " popped element");
        System.out.println(s.peek() +" top element");
        System.out.print("after pop element ");
        s.print();

    }
}